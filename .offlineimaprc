# Offlineimap sample configuration file

##################################################
# General definitions
##################################################

[general]

#metadata = ~/.offlineimap
ui = quiet
accounts = gmail

maxsyncaccounts = 1

#ui = basic

#ignore-readonly = no

########## Advanced settings

# pythonfile = ~/.offlineimap.py

socktimeout = 60

# fsync = true

##################################################
# Mailbox name recorder
##################################################

[mbnames]

enabled = no
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = ""
footer = "\n"

# You can also specify a folderfilter.  It will apply to the
# *translated* folder name here, and it takes TWO arguments:
# accountname and foldername.  In all other ways, it will
# behave identically to the folderfilter for accounts.  Please see
# that section for more information and examples.
#
# Note that this filter can be used only to further restrict mbnames
# to a subset of folders that pass the account's folderfilter.
#
#
# You can customize the order in which mailbox names are listed in the
# generated file by specifying a sort_keyfunc, which takes a single
# dict argument containing keys 'accountname' and 'foldername'.  This
# function will be called once for each mailbox, and should return a
# suitable sort key that defines this mailbox' position in the custom
# ordering.
#
# This is useful with e.g. Mutt-sidebar, which uses the mailbox order
# from the generated file when listing mailboxes in the sidebar.
#
# Default setting is
# sort_keyfunc = lambda d: (d['accountname'], d['foldername'])


##################################################
# Accounts
##################################################


[Account gmail]
########## Basic settings


localrepository = gmail-local
remoterepository = gmail-remote

########## Advanced settings

autorefresh = 5

quick = 10

maxage = 120


[Repository gmail-local]

type = GmailMaildir

localfolders = ~/.mail/roorco
folderfilter = lambda foldername: foldername not in '[[Gmail]/All Mail, ]'

nametrans = lambda folder: '[Gmail]/' + folder

nametrans = lambda foldername: re.sub ('^\[gmail\]', '',
                               re.sub ('sent_mail', 'sent',
                               re.sub ('starred', 'flagged',
                               re.sub (' ', '_', foldername.lower()))))

[Repository gmail-remote]

type = Gmail
remoteuser = roorco@gmail.com
remotepass = Baobab11!
nametrans = lambda foldername: re.sub ('^\[gmail\]', '',
                               re.sub ('sent_mail', 'sent',
                               re.sub ('starred', 'flagged',
                               re.sub (' ', '_', foldername.lower()))))
folderfilter = lambda foldername: foldername not in '[[Gmail]/All Mail, /drafts, /trash, /spam, /flagged, /sent, /important, inbox, .drafts, .trash, .spam,. flagged, .sent, .important, liste]'
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

